// Probably from https://www.pinterest.de/pin/200410252158492924/
const dinosaur = await readSvg('https://jsxcad.js.org/svg/dinosaur.svg', { fill: false });

const plotter = GrblPlotter();

const aligned = dinosaur.scale(10).align('xy').gcode('dinosaur', plotter);

const spiral = Spiral((a) => [[1 + (a * 360) / 100]], {
  to: 10,
  by: 3 / 360,
}).gcode('spiral', plotter);
const flowers = await readSvg('https://jsxcad.js.org/svg/flowers.svg', { fill: false });

flowers
  .scale(1 / 60)
  .align()
  .gcode('flowers', plotter);
const mandala = await readSvg('https://jsxcad.js.org/svg/mandala.svg', { fill: false });

const scaledMandala = mandala
  .align('xy')
  .scale(20)
  .gcode('mandala', plotter, s => s, { doPlan: false });

const visnezh = await readSvg('https://jsxcad.js.org/svg/visnezh.svg', { fill: false });

const scaledVisnezh = visnezh
  .align('xy')
  .scale(1 / 100)
  .gcode('visnezh', plotter, s => s, { doPlan: false });
const calibration = Group(
  seq(
    (x) =>
      Box(10)
        .x(x)
        .op((s) =>
          Group(seq((y) => s.y(y), { from: -100, upto: 100, by: 60 }))
        ),
    { from: -100, upto: 100, by: 60 }
  )
)
  .align('xy')
  .gcode('calibration', plotter);

const star = Group(
  seq((a) => Triangle(5).rz(a), { upto: 120 / 360, by: 30 / 360 })
).view(undefined, { outline: false });

const r = Random();

const stars = Group(
  seq((i) => star.x(r.in(-100, 100)).y(r.in(-100, 100)), { upto: 20 })
).gcode('stars', plotter);
