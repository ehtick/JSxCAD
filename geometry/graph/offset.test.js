import { fromPaths } from './fromPaths.js';
import { initCgal } from '@jsxcad/algorithm-cgal';
import { offset } from './offset.js';
import { serialized } from './serialized.js';
import test from 'ava';
import { test as testGraph } from './test.js';

Error.stackTraceLimit = Infinity;

test.beforeEach(async (t) => {
  await initCgal();
});

test('offset', (t) => {
  const square = [
    [
      [-0.5, 0.5, -0.5],
      [0.5, 0.5, -0.5],
      [0.5, -0.5, -0.5],
      [-0.5, -0.5, -0.5],
    ],
  ];
  const geometry = fromPaths({}, square);
  const offsetGeometries = offset(geometry, -0.2);
  for (const geometry of offsetGeometries) {
    testGraph(geometry);
  }
  t.deepEqual(offsetGeometries.map(serialized), [
    '36\n' +
      '-6167913034711717/9007199254740992 -5192980812730613/9007199254740992 1/2\n' +
      '-3000721060912373/4503599627370496 -1376106496283147/2251799813685248 1/2\n' +
      '-6270425316712277/9007199254740992 -2427521553992335/4503599627370496 1/2\n' +
      '-4855043107984659/9007199254740992 -783803164589035/1125899906842624 1/2\n' +
      '-1/2 -3152519739159347/4503599627370496 1/2\n' +
      '-2596490406365301/4503599627370496 -3083956517355861/4503599627370496 1/2\n' +
      '-2888704980937823/4503599627370496 -2888704980937827/4503599627370496 1/2\n' +
      '-2752212992566289/4503599627370496 -6001442121824753/9007199254740992 1/2\n' +
      '-3152519739159347/4503599627370496 -1125899906842625/2251799813685248 1/2\n' +
      '-3152519739159347/4503599627370496 9007199254740983/18014398509481984 1/2\n' +
      '1/2 -3152519739159347/4503599627370496 1/2\n' +
      '2427521553992333/4503599627370496 -3135212658356139/4503599627370496 1/2\n' +
      '324561300795663/562949953421312 -6167913034711719/9007199254740992 1/2\n' +
      '688053248141573/1125899906842624 -6001442121824749/9007199254740992 1/2\n' +
      '2888704980937825/4503599627370496 -2888704980937825/4503599627370496 1/2\n' +
      '6167913034711719/9007199254740992 -324561300795663/562949953421312 1/2\n' +
      '6001442121824749/9007199254740992 -688053248141573/1125899906842624 1/2\n' +
      '3135212658356139/4503599627370496 -2427521553992333/4503599627370496 1/2\n' +
      '3152519739159347/4503599627370496 -1/2 1/2\n' +
      '3152519739159347/4503599627370496 9007199254740991/18014398509481984 1/2\n' +
      '9007199254740989/18014398509481984 3152519739159347/4503599627370496 1/2\n' +
      '3135212658356139/4503599627370496 2427521553992333/4503599627370496 1/2\n' +
      '6167913034711719/9007199254740992 324561300795663/562949953421312 1/2\n' +
      '6001442121824749/9007199254740992 5504425985132583/9007199254740992 1/2\n' +
      '5192980812730607/9007199254740992 770989129338965/1125899906842624 1/2\n' +
      '4855043107984665/9007199254740992 3135212658356139/4503599627370496 1/2\n' +
      '688053248141573/1125899906842624 6001442121824749/9007199254740992 1/2\n' +
      '2888704980937825/4503599627370496 2888704980937825/4503599627370496 1/2\n' +
      '-4503599627370497/9007199254740992 3152519739159347/4503599627370496 1/2\n' +
      '-4855043107984667/9007199254740992 3135212658356139/4503599627370496 1/2\n' +
      '-2752212992566293/4503599627370496 1500360530456187/2251799813685248 1/2\n' +
      '-1444352490468913/2251799813685248 90272030654307/140737488355328 1/2\n' +
      '-2596490406365305/4503599627370496 6167913034711719/9007199254740992 1/2\n' +
      '-6001442121824751/9007199254740992 5504425985132581/9007199254740992 1/2\n' +
      '-6270425316712279/9007199254740992 2427521553992331/4503599627370496 1/2\n' +
      '-6167913034711721/9007199254740992 5192980812730605/9007199254740992 1/2\n' +
      '\n' +
      '34\n' +
      '3 2 0 1\n' +
      '3 5 3 4\n' +
      '3 6 2 1\n' +
      '3 5 4 7\n' +
      '3 7 4 6\n' +
      '3 4 2 6\n' +
      '3 8 2 4\n' +
      '3 8 4 9\n' +
      '3 4 10 9\n' +
      '3 10 11 12\n' +
      '3 14 12 13\n' +
      '3 15 12 14\n' +
      '3 15 14 16\n' +
      '3 10 12 15\n' +
      '3 18 15 17\n' +
      '3 10 15 18\n' +
      '3 10 18 9\n' +
      '3 18 19 20\n' +
      '3 19 21 22\n' +
      '3 19 22 23\n' +
      '3 26 24 25\n' +
      '3 26 25 27\n' +
      '3 25 23 27\n' +
      '3 19 23 25\n' +
      '3 19 25 20\n' +
      '3 18 20 9\n' +
      '3 20 28 9\n' +
      '3 31 29 30\n' +
      '3 29 32 30\n' +
      '3 28 29 31\n' +
      '3 28 31 9\n' +
      '3 31 33 34\n' +
      '3 33 35 34\n' +
      '3 31 34 9\n',
  ]);
});
