import { blessed } from './transform.js';
import { fromGraphToSurfaceMesh } from './fromGraphToSurfaceMesh.js';
import { fromSurfaceMeshToGraph } from './fromSurfaceMeshToGraph.js';
import { initCgal } from './getCgal.js';
import test from 'ava';
import { transformSurfaceMesh } from './transformSurfaceMesh.js';

test.beforeEach(async (t) => {
  await initCgal();
});

const solid = {
  edges: [
    { point: 1, next: 2, twin: 1, loop: 0 },
    { point: 0, next: 18, twin: 0, loop: 4 },
    { point: 2, next: 4, twin: 3, loop: 0 },
    { point: 1, next: 12, twin: 2, loop: 2 },
    { point: 0, next: 0, twin: 5, loop: 0 },
    { point: 2, next: 6, twin: 4, loop: 1 },
    { point: 3, next: 8, twin: 7, loop: 1 },
    { point: 2, next: 11, twin: 6, loop: 8 },
    { point: 0, next: 5, twin: 9, loop: 1 },
    { point: 3, next: 24, twin: 8, loop: 6 },
    { point: 2, next: 3, twin: 11, loop: 2 },
    { point: 4, next: 30, twin: 10, loop: 8 },
    { point: 4, next: 10, twin: 13, loop: 2 },
    { point: 1, next: 14, twin: 12, loop: 3 },
    { point: 5, next: 16, twin: 15, loop: 3 },
    { point: 1, next: 21, twin: 14, loop: 5 },
    { point: 4, next: 13, twin: 17, loop: 3 },
    { point: 5, next: 35, twin: 16, loop: 11 },
    { point: 6, next: 20, twin: 19, loop: 4 },
    { point: 0, next: 27, twin: 18, loop: 7 },
    { point: 1, next: 1, twin: 21, loop: 4 },
    { point: 6, next: 22, twin: 20, loop: 5 },
    { point: 5, next: 15, twin: 23, loop: 5 },
    { point: 6, next: 29, twin: 22, loop: 10 },
    { point: 7, next: 26, twin: 25, loop: 6 },
    { point: 3, next: 31, twin: 24, loop: 9 },
    { point: 0, next: 9, twin: 27, loop: 6 },
    { point: 7, next: 28, twin: 26, loop: 7 },
    { point: 6, next: 19, twin: 29, loop: 7 },
    { point: 7, next: 34, twin: 28, loop: 10 },
    { point: 3, next: 7, twin: 31, loop: 8 },
    { point: 4, next: 32, twin: 30, loop: 9 },
    { point: 7, next: 25, twin: 33, loop: 9 },
    { point: 4, next: 17, twin: 32, loop: 11 },
    { point: 5, next: 23, twin: 35, loop: 10 },
    { point: 7, next: 33, twin: 34, loop: 11 },
  ],
  faces: [
    { loop: 0, plane: [0, 1, 0, 0.5] },
    { loop: 1, plane: [0, 1, 0, 0.5] },
    { loop: 2, plane: [0, 0, 1, 0.5] },
    { loop: 3, plane: [0, 0, 1, 0.5] },
    { loop: 4, plane: [-1, 0, 0, 0.5] },
    { loop: 5, plane: [-1, 0, 0, 0.5] },
    { loop: 6, plane: [0, 0, -1, 0.5] },
    { loop: 7, plane: [0, 0, -1, 0.5] },
    { loop: 8, plane: [1, 0, 0, 0.5] },
    { loop: 9, plane: [1, 0, 0, 0.5] },
    { loop: 10, plane: [0, -1, 0, 0.5] },
    { loop: 11, plane: [0, -1, 0, 0.5] },
  ],
  facets: [
    { edge: 4 },
    { edge: 5 },
    { edge: 12 },
    { edge: 13 },
    { edge: 20 },
    { edge: 21 },
    { edge: 26 },
    { edge: 27 },
    { edge: 30 },
    { edge: 31 },
    { edge: 34 },
    { edge: 35 },
  ],
  points: [
    [-0.5, 0.5, -0.5],
    [-0.5, 0.5, 0.5],
    [0.5, 0.5, 0.5],
    [0.5, 0.5, -0.5],
    [0.5, -0.5, 0.5],
    [-0.5, -0.5, 0.5],
    [-0.5, -0.5, -0.5],
    [0.5, -0.5, -0.5],
  ],
  exactPoints: [
    ['-1/2', '1/2', '-1/2'],
    ['-1/2', '1/2', '1/2'],
    ['1/2', '1/2', '1/2'],
    ['1/2', '1/2', '-1/2'],
    ['1/2', '-1/2', '1/2'],
    ['-1/2', '-1/2', '1/2'],
    ['-1/2', '-1/2', '-1/2'],
    ['1/2', '-1/2', '-1/2'],
  ],
  isClosed: true,
};

test('transformSurfaceMesh', (t) => {
  const mesh = fromGraphToSurfaceMesh(solid);
  t.true(mesh.is_valid(false));
  t.false(mesh.is_empty());
  const transformedMesh = transformSurfaceMesh(
    mesh,
    blessed([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 2, 4, 6, 1])
  );
  const transformedGraph = fromSurfaceMeshToGraph(transformedMesh);
  t.deepEqual(transformedGraph, {
    edges: [
      { point: 0, next: 2, twin: 1, facet: 0, face: 0 },
      { point: 1, next: 18, twin: 0, facet: 4, face: 4 },
      { point: 1, next: 4, twin: 3, facet: 0, face: 0 },
      { point: 2, next: 12, twin: 2, facet: 2, face: 2 },
      { point: 2, next: 0, twin: 5, facet: 0, face: 0 },
      { point: 0, next: 6, twin: 4, facet: 1, face: 0 },
      { point: 2, next: 8, twin: 7, facet: 1, face: 0 },
      { point: 3, next: 11, twin: 6, facet: 8, face: 8 },
      { point: 3, next: 5, twin: 9, facet: 1, face: 0 },
      { point: 0, next: 24, twin: 8, facet: 6, face: 6 },
      { point: 4, next: 3, twin: 11, facet: 2, face: 2 },
      { point: 2, next: 30, twin: 10, facet: 8, face: 8 },
      { point: 1, next: 10, twin: 13, facet: 2, face: 2 },
      { point: 4, next: 14, twin: 12, facet: 3, face: 2 },
      { point: 1, next: 16, twin: 15, facet: 3, face: 2 },
      { point: 5, next: 21, twin: 14, facet: 5, face: 4 },
      { point: 5, next: 13, twin: 17, facet: 3, face: 2 },
      { point: 4, next: 35, twin: 16, facet: 11, face: 10 },
      { point: 0, next: 20, twin: 19, facet: 4, face: 4 },
      { point: 6, next: 27, twin: 18, facet: 7, face: 6 },
      { point: 6, next: 1, twin: 21, facet: 4, face: 4 },
      { point: 1, next: 22, twin: 20, facet: 5, face: 4 },
      { point: 6, next: 15, twin: 23, facet: 5, face: 4 },
      { point: 5, next: 29, twin: 22, facet: 10, face: 10 },
      { point: 3, next: 26, twin: 25, facet: 6, face: 6 },
      { point: 7, next: 31, twin: 24, facet: 9, face: 8 },
      { point: 7, next: 9, twin: 27, facet: 6, face: 6 },
      { point: 0, next: 28, twin: 26, facet: 7, face: 6 },
      { point: 7, next: 19, twin: 29, facet: 7, face: 6 },
      { point: 6, next: 34, twin: 28, facet: 10, face: 10 },
      { point: 4, next: 7, twin: 31, facet: 8, face: 8 },
      { point: 3, next: 32, twin: 30, facet: 9, face: 8 },
      { point: 4, next: 25, twin: 33, facet: 9, face: 8 },
      { point: 7, next: 17, twin: 32, facet: 11, face: 10 },
      { point: 7, next: 23, twin: 35, facet: 10, face: 10 },
      { point: 5, next: 33, twin: 34, facet: 11, face: 10 },
    ],
    points: [
      [1.5, 4.5, 5.5],
      [1.5, 4.5, 6.5],
      [2.5, 4.5, 6.5],
      [2.5, 4.5, 5.5],
      [2.5, 3.5, 6.5],
      [1.5, 3.5, 6.5],
      [1.5, 3.5, 5.5],
      [2.5, 3.5, 5.5],
    ],
    exactPoints: [
      ['3/2', '9/2', '11/2'],
      ['3/2', '9/2', '13/2'],
      ['5/2', '9/2', '13/2'],
      ['5/2', '9/2', '11/2'],
      ['5/2', '7/2', '13/2'],
      ['3/2', '7/2', '13/2'],
      ['3/2', '7/2', '11/2'],
      ['5/2', '7/2', '11/2'],
    ],
    faces: [
      { plane: [0, 1, 0, -4.5], exactPlane: ['0', '1', '0', '-9/2'] },
      undefined,
      { plane: [0, 0, 1, -6.5], exactPlane: ['0', '0', '1', '-13/2'] },
      undefined,
      {
        plane: [-1, 0, 0, 1.5],
        exactPlane: ['-1', '0', '0', '3/2'],
      },
      undefined,
      { plane: [0, 0, -1, 5.5], exactPlane: ['0', '0', '-1', '11/2'] },
      undefined,
      {
        plane: [1, 0, 0, -2.5],
        exactPlane: ['1', '0', '0', '-5/2'],
      },
      undefined,
      { plane: [0, -1, 0, 3.5], exactPlane: ['0', '-1', '0', '7/2'] },
    ],
    facets: [
      { edge: 4 },
      { edge: 8 },
      { edge: 12 },
      { edge: 16 },
      { edge: 20 },
      { edge: 22 },
      { edge: 26 },
      { edge: 28 },
      { edge: 30 },
      { edge: 32 },
      { edge: 34 },
      { edge: 35 },
    ],
    isClosed: true,
  });
});
