import { cut } from './cut.js';
import { initCgal } from './getCgal.js';

import test from 'ava';

test.beforeEach(async (t) => {
  await initCgal();
});

test('Cut Box A', (t) => {
  const result = cut(
    [
      {
        type: 'polygonsWithHoles',
        tags: [],
        matrix: [
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          '1 0 0 0 0 1 0 0 0 0 1 0 1',
        ],
        plane: [0, 0, 1, 0],
        exactPlane: '0 0 1 0',
        polygonsWithHoles: [
          {
            points: [
              [-5, -5],
              [5, -5],
              [5, 5],
              [-5, 5],
            ],
            exactPoints: ['-5 -5', '5 -5', '5 5', '-5 5'],
            holes: [],
          },
        ],
      },
      {
        type: 'polygonsWithHoles',
        tags: [],
        matrix: [
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          '1 0 0 0 0 1 0 0 0 0 1 0 1',
        ],
        plane: [0, 0, 1, 0],
        exactPlane: '0 0 1 0',
        polygonsWithHoles: [
          {
            points: [
              [-2, -2],
              [2, -2],
              [2, 2],
              [-2, 2],
            ],
            exactPoints: ['-2 -2', '2 -2', '2 2', '-2 2'],
            holes: [],
          },
        ],
      },
    ],
    1
  );
  t.deepEqual(JSON.parse(JSON.stringify(result)), [
    {
      type: 'polygonsWithHoles',
      tags: [],
      matrix: [
        1,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        1,
        '1 0 0 0 0 1 0 0 0 0 1 0 1',
      ],
      plane: [0, 0, 1, 0],
      exactPlane: '0 0 1 0',
      polygonsWithHoles: [
        {
          points: [
            [-5, -5],
            [5, -5],
            [5, 5],
            [-5, 5],
          ],
          exactPoints: ['-5 -5', '5 -5', '5 5', '-5 5'],
          holes: [
            {
              points: [
                [2, 2],
                [2, -2],
                [-2, -2],
                [-2, 2],
              ],
              exactPoints: ['2 2', '2 -2', '-2 -2', '-2 2'],
            },
          ],
        },
      ],
    },
  ]);
});

test('Cut Box B', (t) => {
  const result = cut(
    [
      {
        type: 'polygonsWithHoles',
        tags: [],
        matrix: [
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          '1 0 0 0 0 1 0 0 0 0 1 0 1',
        ],
        plane: [0, 0, 1, 0],
        exactPlane: '0 0 1 0',
        polygonsWithHoles: [
          {
            points: [
              [-4.5, -4.5],
              [4.5, -4.5],
              [4.5, 4.5],
              [-4.5, 4.5],
            ],
            exactPoints: ['-9/2 -9/2', '9/2 -9/2', '9/2 9/2', '-9/2 9/2'],
            holes: [],
          },
        ],
      },
      {
        type: 'polygonsWithHoles',
        tags: [],
        matrix: [
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          '1 0 0 0 0 1 0 0 0 0 1 0 1',
        ],
        plane: [0, 0, 1, 0],
        exactPlane: '0 0 1 0',
        polygonsWithHoles: [
          {
            points: [
              [-4, -4],
              [4, -4],
              [4, 4],
              [-4, 4],
            ],
            exactPoints: ['-4 -4', '4 -4', '4 4', '-4 4'],
            holes: [],
          },
        ],
      },
    ],
    1
  );
  t.deepEqual(JSON.parse(JSON.stringify(result)), [
    {
      type: 'polygonsWithHoles',
      tags: [],
      matrix: [
        1,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        1,
        '1 0 0 0 0 1 0 0 0 0 1 0 1',
      ],
      plane: [0, 0, 1, 0],
      exactPlane: '0 0 1 0',
      polygonsWithHoles: [
        {
          points: [
            [-4.5, -4.5],
            [4.5, -4.5],
            [4.5, 4.5],
            [-4.5, 4.5],
          ],
          exactPoints: ['-9/2 -9/2', '9/2 -9/2', '9/2 9/2', '-9/2 9/2'],
          holes: [
            {
              points: [
                [4, 4],
                [4, -4],
                [-4, -4],
                [-4, 4],
              ],
              exactPoints: ['4 4', '4 -4', '-4 -4', '-4 4'],
            },
          ],
        },
      ],
    },
  ]);
});

test('Cut Box C', (t) => {
  const result = cut(
    [
      {
        type: 'polygonsWithHoles',
        tags: [],
        matrix: [
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          '1 0 0 0 0 1 0 0 0 0 1 0 1',
        ],
        plane: [0, 0, 1, 0],
        exactPlane: '0 0 1 0',
        polygonsWithHoles: [
          {
            points: [
              [-5, -5],
              [5, -5],
              [5, 5],
              [-5, 5],
            ],
            exactPoints: ['-5 -5', '5 -5', '5 5', '-5 5'],
            holes: [
              {
                points: [
                  [2, 2],
                  [2, -2],
                  [-2, -2],
                  [-2, 2],
                ],
                exactPoints: ['2 2', '2 -2', '-2 -2', '-2 2'],
              },
            ],
          },
        ],
      },
      {
        type: 'polygonsWithHoles',
        tags: [],
        matrix: [
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          '1 0 0 0 0 1 0 0 0 0 1 0 1',
        ],
        plane: [0, 0, 1, 0],
        exactPlane: '0 0 1 0',
        polygonsWithHoles: [
          {
            points: [
              [-4.5, -4.5],
              [4.5, -4.5],
              [4.5, 4.5],
              [-4.5, 4.5],
            ],
            exactPoints: ['-9/2 -9/2', '9/2 -9/2', '9/2 9/2', '-9/2 9/2'],
            holes: [
              {
                points: [
                  [4, 4],
                  [4, -4],
                  [-4, -4],
                  [-4, 4],
                ],
                exactPoints: ['4 4', '4 -4', '-4 -4', '-4 4'],
              },
            ],
          },
        ],
      },
    ],
    1
  );
  t.deepEqual(JSON.parse(JSON.stringify(result)), [
    {
      type: 'polygonsWithHoles',
      tags: [],
      matrix: [
        1,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        1,
        '1 0 0 0 0 1 0 0 0 0 1 0 1',
      ],
      plane: [0, 0, 1, 0],
      exactPlane: '0 0 1 0',
      polygonsWithHoles: [
        {
          points: [
            [-5, -5],
            [5, -5],
            [5, 5],
            [-5, 5],
          ],
          exactPoints: ['-5 -5', '5 -5', '5 5', '-5 5'],
          holes: [
            {
              points: [
                [4.5, 4.5],
                [4.5, -4.5],
                [-4.5, -4.5],
                [-4.5, 4.5],
              ],
              exactPoints: ['9/2 9/2', '9/2 -9/2', '-9/2 -9/2', '-9/2 9/2'],
            },
          ],
        },
        {
          points: [
            [-4, -4],
            [4, -4],
            [4, 4],
            [-4, 4],
          ],
          exactPoints: ['-4 -4', '4 -4', '4 4', '-4 4'],
          holes: [
            {
              points: [
                [2, 2],
                [2, -2],
                [-2, -2],
                [-2, 2],
              ],
              exactPoints: ['2 2', '2 -2', '-2 -2', '-2 2'],
            },
          ],
        },
      ],
    },
  ]);
});

test('Cut box-with-hole from thinner box-with-hole', (t) => {
  const result = cut(
    [
      {
        type: 'polygonsWithHoles',
        tags: [],
        matrix: [
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          '1 0 0 0 0 1 0 0 0 0 1 0 1',
        ],
        plane: [0, 0, 1, 0],
        exactPlane: '0 0 1 0',
        polygonsWithHoles: [
          {
            points: [
              [-10, -10],
              [10, -10],
              [10, 10],
              [-10, 10],
            ],
            exactPoints: ['-10 -10', '10 -10', '10 10', '-10 10'],
            holes: [
              {
                points: [
                  [5, 5],
                  [5, -5],
                  [-5, -5],
                  [-5, 5],
                ],
                exactPoints: ['5 5', '5 -5', '-5 -5', '-5 5'],
              },
            ],
          },
        ],
      },
      {
        type: 'polygonsWithHoles',
        tags: [],
        matrix: [
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          '1 0 0 0 0 1 0 0 0 0 1 0 1',
        ],
        plane: [0, 0, 1, 0],
        exactPlane: '0 0 1 0',
        polygonsWithHoles: [
          {
            points: [
              [-9.5, -9.5],
              [9.5, -9.5],
              [9.5, 9.5],
              [-9.5, 9.5],
            ],
            exactPoints: [
              '-19/2 -19/2',
              '19/2 -19/2',
              '19/2 19/2',
              '-19/2 19/2',
            ],
            holes: [
              {
                points: [
                  [5.5, 5.5],
                  [5.5, -5.5],
                  [-5.5, -5.5],
                  [-5.5, 5.5],
                ],
                exactPoints: [
                  '11/2 11/2',
                  '11/2 -11/2',
                  '-11/2 -11/2',
                  '-11/2 11/2',
                ],
              },
            ],
          },
        ],
      },
    ],
    1
  );
  t.deepEqual(JSON.parse(JSON.stringify(result)), [
    {
      type: 'polygonsWithHoles',
      tags: [],
      matrix: [
        1,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        1,
        '1 0 0 0 0 1 0 0 0 0 1 0 1',
      ],
      plane: [0, 0, 1, 0],
      exactPlane: '0 0 1 0',
      polygonsWithHoles: [
        {
          points: [
            [-10, -10],
            [10, -10],
            [10, 10],
            [-10, 10],
          ],
          exactPoints: ['-10 -10', '10 -10', '10 10', '-10 10'],
          holes: [
            {
              points: [
                [9.5, 9.5],
                [9.5, -9.5],
                [-9.5, -9.5],
                [-9.5, 9.5],
              ],
              exactPoints: [
                '19/2 19/2',
                '19/2 -19/2',
                '-19/2 -19/2',
                '-19/2 19/2',
              ],
            },
          ],
        },
        {
          points: [
            [-5.5, -5.5],
            [5.5, -5.5],
            [5.5, 5.5],
            [-5.5, 5.5],
          ],
          exactPoints: ['-11/2 -11/2', '11/2 -11/2', '11/2 11/2', '-11/2 11/2'],
          holes: [
            {
              points: [
                [5, 5],
                [5, -5],
                [-5, -5],
                [-5, 5],
              ],
              exactPoints: ['5 5', '5 -5', '-5 -5', '-5 5'],
            },
          ],
        },
      ],
    },
  ]);
});

test('Cut box from box', (t) => {
  const result = cut(
    [
      {
        type: 'graph',
        matrix: [
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          '1 0 0 0 0 1 0 0 0 0 1 0 1',
        ],
        tags: [],
        graph: {
          serializedSurfaceMesh:
            '8\n5/2 -5/2 -5/2 2500 -2500 -2500\n5/2 5/2 -5/2 2500 2500 -2500\n-5/2 5/2 -5/2 -2500 2500 -2500\n-5/2 -5/2 -5/2 -2500 -2500 -2500\n5/2 -5/2 5/2 2500 -2500 2500\n5/2 5/2 5/2 2500 2500 2500\n-5/2 5/2 5/2 -2500 2500 2500\n-5/2 -5/2 5/2 -2500 -2500 2500\n\n12\n3 1 0 2\n3 0 3 2\n3 4 5 6\n3 7 4 6\n3 4 1 5\n3 1 4 0\n3 5 2 6\n3 2 5 1\n3 6 3 7\n3 3 6 2\n3 7 0 4\n3 0 7 3\n',
          hash: 'UCgf2fUqrPTO4gYcPFdTu4QfRSwO/zuPLAeB0P643sg=',
        },
      },
      {
        type: 'graph',
        matrix: [
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          '1 0 0 0 0 1 0 0 0 0 1 0 1',
        ],
        tags: [],
        graph: {
          serializedSurfaceMesh:
            '8\n2 -2 -2 2000 -2000 -2000\n2 2 -2 2000 2000 -2000\n-2 2 -2 -2000 2000 -2000\n-2 -2 -2 -2000 -2000 -2000\n2 -2 2 2000 -2000 2000\n2 2 2 2000 2000 2000\n-2 2 2 -2000 2000 2000\n-2 -2 2 -2000 -2000 2000\n\n12\n3 1 0 2\n3 0 3 2\n3 4 5 6\n3 7 4 6\n3 4 1 5\n3 1 4 0\n3 5 2 6\n3 2 5 1\n3 6 3 7\n3 3 6 2\n3 7 0 4\n3 0 7 3\n',
          hash: 'sUqpQSmaahmB2H8moWUKhr7jozcG3k/Dfd9rN+4CGA4=',
        },
      },
    ],
    1
  );
  t.deepEqual(JSON.parse(JSON.stringify(result)), [
    {
      type: 'graph',
      matrix: [
        1,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        1,
        '1 0 0 0 0 1 0 0 0 0 1 0 1',
      ],
      tags: [],
      graph: {
        serializedSurfaceMesh:
          '16\n5/2 5/2 -5/2 2500 2500 -2500\n-5/2 5/2 -5/2 -2500 2500 -2500\n5/2 -5/2 -5/2 2500 -2500 -2500\n-5/2 -5/2 -5/2 -2500 -2500 -2500\n-5/2 -5/2 5/2 -2500 -2500 2500\n-5/2 5/2 5/2 -2500 2500 2500\n5/2 -5/2 5/2 2500 -2500 2500\n5/2 5/2 5/2 2500 2500 2500\n2 -2 -2 2000 -2000 -2000\n-2 -2 -2 -2000 -2000 -2000\n-2 2 -2 -2000 2000 -2000\n2 2 -2 2000 2000 -2000\n-2 -2 2 -2000 -2000 2000\n2 -2 2 2000 -2000 2000\n-2 2 2 -2000 2000 2000\n2 2 2 2000 2000 2000\n\n24\n3 1 0 2\n3 1 2 3\n3 5 6 7\n3 5 4 6\n3 0 7 6\n3 2 0 6\n3 0 5 7\n3 0 1 5\n3 1 4 5\n3 1 3 4\n3 4 2 6\n3 3 2 4\n3 9 8 10\n3 11 10 8\n3 13 12 14\n3 13 14 15\n3 11 13 15\n3 11 8 13\n3 14 11 15\n3 10 11 14\n3 9 10 12\n3 10 14 12\n3 8 12 13\n3 8 9 12\n',
        hash: '/QT1nw9ciH7fYyVawiY/kx/FxJ5zTiXXquSgWF5L6MY=',
      },
    },
  ]);
});

test('bad fuse', (t) => {
  const result = cut(
    [
      {
        type: 'graph',
        matrix: [
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          '1 0 0 0 0 1 0 0 0 0 1 0 1',
        ],
        tags: [],
        graph: {
          serializedSurfaceMesh:
            '8\n10 -10 -10 10000 -10000 -10000\n10 10 -10 10000 10000 -10000\n-10 10 -10 -10000 10000 -10000\n-10 -10 -10 -10000 -10000 -10000\n10 -10 10 10000 -10000 10000\n10 10 10 10000 10000 10000\n-10 10 10 -10000 10000 10000\n-10 -10 10 -10000 -10000 10000\n\n12\n3 1 0 2\n3 0 3 2\n3 4 5 6\n3 7 4 6\n3 4 1 5\n3 1 4 0\n3 5 2 6\n3 2 5 1\n3 6 3 7\n3 3 6 2\n3 7 0 4\n3 0 7 3\n',
          hash: 'pvbatv3iig31x1KjcNMyQ9nfOPu/K+D8spk2lFVCGpQ=',
        },
      },
      {
        type: 'graph',
        matrix: [
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          '1 0 0 0 0 1 0 0 0 0 1 0 1',
        ],
        tags: [],
        graph: {
          serializedSurfaceMesh:
            '168\n3434873/33554432 -8161931/16777216 1/2 102 -486 500\n3434873/33554432 -8161931/16777216 -1/2 102 -486 -500\n0 -16711671/33554432 1/2 0 -498 500\n0 -16711671/33554432 -1/2 0 -498 -500\n15051369/33554432 -14130343/67108864 1/2 449 -211 500\n13103379/33554432 -10162717/33554432 1/2 391 -303 500\n4918265/4194304 -7846805/8388608 1/2 1173 -935 500\n5666703/4194304 -5466587/8388608 1/2 1351 -652 500\n8161931/16777216 -3434873/33554432 1/2 486 -102 500\n16711671/33554432 0 1/2 498 0 500\n0 3/2 1/2 0 1500 500\n-701385/2097152 12266157/8388608 1/2 -334 1462 500\n3/2 0 1/2 1500 0 500\n12266157/8388608 701385/2097152 1/2 1462 334 500\n-3434873/33554432 8161931/16777216 1/2 -102 486 500\n0 16711671/33554432 1/2 0 498 500\n-14130343/67108864 15051369/33554432 1/2 -211 449 500\n-10162717/33554432 13103379/33554432 1/2 -303 391 500\n7846805/8388608 -4918265/4194304 1/2 935 -1173 500\n-8161931/16777216 3434873/33554432 1/2 -486 102 500\n-15051369/33554432 14130343/67108864 1/2 -449 211 500\n701385/2097152 -12266157/8388608 1/2 334 -1462 500\n5466587/8388608 -5666703/4194304 1/2 652 -1351 500\n10162717/33554432 -13103379/33554432 1/2 303 -391 500\n14130343/67108864 -15051369/33554432 1/2 211 -449 500\n-14130343/67108864 -15051369/33554432 1/2 -211 -449 500\n-10162717/33554432 -13103379/33554432 1/2 -303 -391 500\n0 -3/2 1/2 0 -1500 500\n-701385/2097152 -12266157/8388608 1/2 -334 -1462 500\n8161931/16777216 3434873/33554432 1/2 486 102 500\n15051369/33554432 14130343/67108864 1/2 449 211 500\n12266157/8388608 -701385/2097152 1/2 1462 -334 500\n5666703/4194304 5466587/8388608 1/2 1351 652 500\n13103379/33554432 10162717/33554432 1/2 391 303 500\n3434873/33554432 8161931/16777216 1/2 102 486 500\n7846805/8388608 4918265/4194304 1/2 935 1173 500\n5466587/8388608 5666703/4194304 1/2 652 1351 500\n701385/2097152 12266157/8388608 1/2 334 1462 500\n14130343/67108864 15051369/33554432 1/2 211 449 500\n10162717/33554432 13103379/33554432 1/2 303 391 500\n4918265/4194304 7846805/8388608 1/2 1173 935 500\n-13103379/33554432 10162717/33554432 1/2 -391 303 500\n-12266157/8388608 701385/2097152 1/2 -1462 334 500\n-3/2 0 1/2 -1500 0 500\n-7846805/8388608 4918265/4194304 1/2 -935 1173 500\n-4918265/4194304 7846805/8388608 1/2 -1173 935 500\n-5466587/8388608 5666703/4194304 1/2 -652 1351 500\n-5666703/4194304 5466587/8388608 1/2 -1351 652 500\n-16711671/33554432 0 1/2 -498 0 500\n-8161931/16777216 -3434873/33554432 1/2 -486 -102 500\n-12266157/8388608 -701385/2097152 1/2 -1462 -334 500\n-15051369/33554432 -14130343/67108864 1/2 -449 -211 500\n-5666703/4194304 -5466587/8388608 1/2 -1351 -652 500\n-4918265/4194304 -7846805/8388608 1/2 -1173 -935 500\n-3434873/33554432 -8161931/16777216 1/2 -102 -486 500\n-7846805/8388608 -4918265/4194304 1/2 -935 -1173 500\n-5466587/8388608 -5666703/4194304 1/2 -652 -1351 500\n-13103379/33554432 -10162717/33554432 1/2 -391 -303 500\n3/2 0 1 1500 0 1000\n12266157/8388608 -701385/2097152 1 1462 -334 1000\n12266157/8388608 701385/2097152 1 1462 334 1000\n5466587/8388608 -5666703/4194304 1 652 -1351 1000\n701385/2097152 -12266157/8388608 1 334 -1462 1000\n5666703/4194304 -5466587/8388608 1 1351 -652 1000\n4918265/4194304 -7846805/8388608 1 1173 -935 1000\n7846805/8388608 -4918265/4194304 1 935 -1173 1000\n5666703/4194304 5466587/8388608 1 1351 652 1000\n701385/2097152 12266157/8388608 1 334 1462 1000\n5466587/8388608 5666703/4194304 1 652 1351 1000\n4918265/4194304 7846805/8388608 1 1173 935 1000\n7846805/8388608 4918265/4194304 1 935 1173 1000\n-5466587/8388608 5666703/4194304 1 -652 1351 1000\n-701385/2097152 12266157/8388608 1 -334 1462 1000\n0 3/2 1 0 1500 1000\n-7846805/8388608 4918265/4194304 1 -935 1173 1000\n-4918265/4194304 7846805/8388608 1 -1173 935 1000\n-5666703/4194304 5466587/8388608 1 -1351 652 1000\n-12266157/8388608 701385/2097152 1 -1462 334 1000\n-12266157/8388608 -701385/2097152 1 -1462 -334 1000\n-3/2 0 1 -1500 0 1000\n-5666703/4194304 -5466587/8388608 1 -1351 -652 1000\n-5466587/8388608 -5666703/4194304 1 -652 -1351 1000\n-7846805/8388608 -4918265/4194304 1 -935 -1173 1000\n0 -3/2 1 0 -1500 1000\n-701385/2097152 -12266157/8388608 1 -334 -1462 1000\n-4918265/4194304 -7846805/8388608 1 -1173 -935 1000\n8161931/16777216 -3434873/33554432 -1/2 486 -102 -500\n16711671/33554432 0 -1/2 498 0 -500\n15051369/33554432 -14130343/67108864 -1/2 449 -211 -500\n13103379/33554432 -10162717/33554432 -1/2 391 -303 -500\n10162717/33554432 -13103379/33554432 -1/2 303 -391 -500\n14130343/67108864 -15051369/33554432 -1/2 211 -449 -500\n12266157/8388608 701385/2097152 -1 1462 334 -1000\n5666703/4194304 5466587/8388608 -1 1351 652 -1000\n701385/2097152 -12266157/8388608 -1 334 -1462 -1000\n5466587/8388608 -5666703/4194304 -1 652 -1351 -1000\n-701385/2097152 -12266157/8388608 -1 -334 -1462 -1000\n0 -3/2 -1 0 -1500 -1000\n7846805/8388608 -4918265/4194304 -1 935 -1173 -1000\n4918265/4194304 -7846805/8388608 -1 1173 -935 -1000\n5666703/4194304 -5466587/8388608 -1 1351 -652 -1000\n12266157/8388608 -701385/2097152 -1 1462 -334 -1000\n3/2 0 -1 1500 0 -1000\n5466587/8388608 5666703/4194304 -1 652 1351 -1000\n701385/2097152 12266157/8388608 -1 334 1462 -1000\n7846805/8388608 4918265/4194304 -1 935 1173 -1000\n4918265/4194304 7846805/8388608 -1 1173 935 -1000\n0 3/2 -1 0 1500 -1000\n-701385/2097152 12266157/8388608 -1 -334 1462 -1000\n-5466587/8388608 5666703/4194304 -1 -652 1351 -1000\n-5666703/4194304 5466587/8388608 -1 -1351 652 -1000\n-12266157/8388608 701385/2097152 -1 -1462 334 -1000\n-7846805/8388608 4918265/4194304 -1 -935 1173 -1000\n-3/2 0 -1 -1500 0 -1000\n-12266157/8388608 -701385/2097152 -1 -1462 -334 -1000\n-4918265/4194304 7846805/8388608 -1 -1173 935 -1000\n-5466587/8388608 -5666703/4194304 -1 -652 -1351 -1000\n-5666703/4194304 -5466587/8388608 -1 -1351 -652 -1000\n-7846805/8388608 -4918265/4194304 -1 -935 -1173 -1000\n-4918265/4194304 -7846805/8388608 -1 -1173 -935 -1000\n8161931/16777216 3434873/33554432 -1/2 486 102 -500\n15051369/33554432 14130343/67108864 -1/2 449 211 -500\n3/2 0 -1/2 1500 0 -500\n12266157/8388608 -701385/2097152 -1/2 1462 -334 -500\n-3434873/33554432 8161931/16777216 -1/2 -102 486 -500\n-14130343/67108864 15051369/33554432 -1/2 -211 449 -500\n13103379/33554432 10162717/33554432 -1/2 391 303 -500\n10162717/33554432 13103379/33554432 -1/2 303 391 -500\n14130343/67108864 15051369/33554432 -1/2 211 449 -500\n-701385/2097152 12266157/8388608 -1/2 -334 1462 -500\n0 3/2 -1/2 0 1500 -500\n-10162717/33554432 13103379/33554432 -1/2 -303 391 -500\n5466587/8388608 5666703/4194304 -1/2 652 1351 -500\n7846805/8388608 4918265/4194304 -1/2 935 1173 -500\n-15051369/33554432 14130343/67108864 -1/2 -449 211 -500\n-8161931/16777216 3434873/33554432 -1/2 -486 102 -500\n5666703/4194304 -5466587/8388608 -1/2 1351 -652 -500\n4918265/4194304 -7846805/8388608 -1/2 1173 -935 -500\n701385/2097152 -12266157/8388608 -1/2 334 -1462 -500\n0 -3/2 -1/2 0 -1500 -500\n-701385/2097152 -12266157/8388608 -1/2 -334 -1462 -500\n-16711671/33554432 0 -1/2 -498 0 -500\n-8161931/16777216 -3434873/33554432 -1/2 -486 -102 -500\n5466587/8388608 -5666703/4194304 -1/2 652 -1351 -500\n7846805/8388608 -4918265/4194304 -1/2 935 -1173 -500\n12266157/8388608 701385/2097152 -1/2 1462 334 -500\n5666703/4194304 5466587/8388608 -1/2 1351 652 -500\n4918265/4194304 7846805/8388608 -1/2 1173 935 -500\n701385/2097152 12266157/8388608 -1/2 334 1462 -500\n3434873/33554432 8161931/16777216 -1/2 102 486 -500\n0 16711671/33554432 -1/2 0 498 -500\n-13103379/33554432 10162717/33554432 -1/2 -391 303 -500\n-5666703/4194304 5466587/8388608 -1/2 -1351 652 -500\n-4918265/4194304 7846805/8388608 -1/2 -1173 935 -500\n-5466587/8388608 5666703/4194304 -1/2 -652 1351 -500\n-7846805/8388608 4918265/4194304 -1/2 -935 1173 -500\n-3/2 0 -1/2 -1500 0 -500\n-12266157/8388608 701385/2097152 -1/2 -1462 334 -500\n-12266157/8388608 -701385/2097152 -1/2 -1462 -334 -500\n-15051369/33554432 -14130343/67108864 -1/2 -449 -211 -500\n-4918265/4194304 -7846805/8388608 -1/2 -1173 -935 -500\n-5666703/4194304 -5466587/8388608 -1/2 -1351 -652 -500\n-13103379/33554432 -10162717/33554432 -1/2 -391 -303 -500\n-10162717/33554432 -13103379/33554432 -1/2 -303 -391 -500\n-5466587/8388608 -5666703/4194304 -1/2 -652 -1351 -500\n-7846805/8388608 -4918265/4194304 -1/2 -935 -1173 -500\n-3434873/33554432 -8161931/16777216 -1/2 -102 -486 -500\n-14130343/67108864 -15051369/33554432 -1/2 -211 -449 -500\n\n332\n3 1 2 3\n3 1 0 2\n3 5 4 7\n3 5 7 6\n3 12 8 9\n3 10 34 15\n3 37 38 34\n3 27 2 0\n3 46 11 16\n3 46 16 17\n3 41 44 17\n3 20 47 41\n3 22 24 23\n3 6 18 5\n3 32 30 33\n3 18 23 5\n3 22 23 18\n3 21 24 22\n3 27 54 2\n3 21 0 24\n3 21 27 0\n3 31 4 8\n3 31 7 4\n3 12 31 8\n3 29 12 9\n3 30 13 29\n3 40 32 33\n3 35 40 33\n3 36 35 39\n3 14 11 10\n3 37 36 38\n3 36 39 38\n3 35 33 39\n3 13 12 29\n3 32 13 30\n3 19 43 42\n3 20 19 42\n3 51 50 49\n3 16 11 14\n3 14 10 15\n3 10 37 34\n3 44 46 17\n3 45 44 41\n3 47 45 41\n3 49 43 48\n3 48 43 19\n3 42 47 20\n3 50 43 49\n3 57 53 52\n3 26 56 55\n3 28 56 25\n3 25 56 26\n3 28 25 54\n3 27 28 54\n3 26 55 57\n3 55 53 57\n3 57 52 51\n3 52 50 51\n3 61 64 63\n3 62 61 63\n3 60 67 59\n3 67 62 59\n3 84 62 72\n3 81 78 80\n3 65 64 61\n3 84 72 77\n3 62 63 59\n3 58 60 59\n3 60 66 67\n3 66 68 67\n3 72 71 77\n3 69 68 66\n3 69 70 68\n3 72 62 67\n3 73 72 67\n3 71 76 77\n3 74 76 71\n3 75 76 74\n3 77 78 84\n3 79 78 77\n3 78 81 84\n3 84 83 62\n3 82 81 80\n3 80 85 82\n3 8 86 87\n3 9 8 87\n3 4 88 86\n3 8 4 86\n3 5 89 88\n3 4 5 88\n3 5 23 89\n3 90 89 23\n3 23 24 90\n3 91 90 24\n3 0 91 24\n3 0 1 91\n3 22 61 62\n3 21 22 62\n3 18 65 61\n3 22 18 61\n3 27 21 83\n3 21 62 83\n3 95 99 98\n3 94 100 95\n3 96 108 94\n3 104 93 92\n3 96 111 108\n3 96 114 111\n3 95 100 99\n3 96 94 97\n3 94 101 100\n3 94 104 101\n3 101 92 102\n3 101 104 92\n3 103 93 104\n3 106 93 103\n3 106 103 105\n3 104 94 108\n3 104 108 107\n3 108 111 109\n3 109 110 112\n3 112 110 115\n3 111 114 113\n3 110 109 111\n3 114 96 116\n3 117 114 116\n3 117 116 118\n3 117 118 119\n3 31 12 59\n3 12 58 59\n3 7 31 63\n3 31 59 63\n3 6 7 64\n3 7 63 64\n3 6 64 65\n3 18 6 65\n3 143 91 138\n3 88 123 86\n3 137 136 89\n3 154 131 125\n3 145 121 120\n3 124 129 125\n3 133 132 127\n3 151 131 155\n3 149 130 150\n3 125 129 154\n3 88 136 123\n3 139 3 166\n3 152 134 151\n3 153 152 151\n3 134 157 135\n3 142 158 159\n3 137 89 144\n3 138 91 1\n3 166 167 140\n3 143 90 91\n3 143 144 90\n3 89 136 88\n3 90 144 89\n3 86 122 87\n3 86 123 122\n3 122 145 120\n3 126 146 147\n3 87 122 120\n3 126 147 133\n3 126 133 127\n3 128 132 148\n3 130 124 150\n3 149 148 130\n3 128 148 149\n3 127 132 128\n3 145 146 121\n3 121 146 126\n3 135 156 141\n3 164 167 163\n3 153 151 155\n3 130 129 124\n3 131 154 155\n3 152 157 134\n3 141 156 142\n3 157 156 135\n3 160 162 161\n3 156 158 142\n3 164 163 165\n3 139 1 3\n3 139 138 1\n3 165 163 162\n3 140 139 166\n3 164 140 167\n3 160 165 162\n3 161 162 159\n3 158 161 159\n3 95 143 138\n3 94 95 138\n3 98 144 143\n3 95 98 143\n3 97 94 139\n3 94 138 139\n3 101 123 136\n3 100 101 136\n3 102 122 123\n3 101 102 123\n3 99 100 137\n3 100 136 137\n3 99 137 144\n3 98 99 144\n3 36 67 68\n3 36 37 67\n3 37 73 67\n3 37 10 73\n3 35 36 68\n3 35 68 70\n3 33 121 126\n3 33 30 121\n3 30 120 121\n3 30 29 120\n3 29 87 120\n3 29 9 87\n3 38 127 128\n3 38 39 127\n3 34 38 128\n3 34 128 149\n3 15 34 149\n3 15 149 150\n3 32 69 66\n3 32 40 69\n3 40 35 70\n3 40 70 69\n3 13 32 66\n3 13 66 60\n3 12 60 58\n3 12 13 60\n3 39 33 126\n3 39 126 127\n3 105 103 132\n3 105 132 133\n3 103 148 132\n3 103 104 148\n3 104 130 148\n3 104 107 130\n3 93 147 146\n3 93 106 147\n3 106 105 133\n3 106 133 147\n3 92 93 146\n3 92 146 145\n3 102 145 122\n3 102 92 145\n3 79 50 78\n3 43 50 79\n3 82 56 81\n3 55 56 82\n3 56 28 81\n3 81 28 84\n3 50 52 78\n3 78 52 80\n3 52 53 80\n3 80 53 85\n3 85 55 82\n3 53 55 85\n3 51 49 159\n3 159 49 142\n3 26 57 163\n3 163 57 162\n3 3 2 54\n3 54 166 3\n3 54 25 166\n3 166 25 167\n3 167 26 163\n3 25 26 167\n3 49 48 142\n3 142 48 141\n3 162 51 159\n3 57 51 162\n3 84 27 83\n3 28 27 84\n3 165 116 164\n3 118 116 165\n3 116 96 164\n3 164 96 140\n3 156 114 158\n3 113 114 156\n3 114 117 158\n3 158 117 161\n3 117 119 161\n3 161 119 160\n3 160 118 165\n3 119 118 160\n3 140 97 139\n3 96 97 140\n3 19 20 134\n3 19 134 135\n3 48 135 141\n3 48 19 135\n3 46 74 71\n3 46 44 74\n3 44 75 74\n3 44 45 75\n3 45 76 75\n3 45 47 76\n3 20 151 134\n3 20 41 151\n3 47 77 76\n3 47 42 77\n3 42 43 79\n3 42 79 77\n3 10 72 73\n3 10 11 72\n3 11 46 71\n3 11 71 72\n3 14 15 150\n3 14 150 124\n3 16 14 124\n3 16 124 125\n3 17 16 125\n3 17 125 131\n3 41 131 151\n3 41 17 131\n3 109 112 155\n3 109 155 154\n3 112 153 155\n3 112 115 153\n3 115 152 153\n3 115 110 152\n3 110 157 152\n3 110 111 157\n3 111 113 156\n3 111 156 157\n3 107 129 130\n3 107 108 129\n3 108 109 154\n3 108 154 129\n',
          hash: 'q57+ZTESlIJbbxBGxcPvq0DrdgnHjrlOt7LE/3NMyh8=',
        },
      },
    ],
    1
  );
  t.deepEqual(result, [
    {
      type: 'graph',
      matrix: [
        1,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        1,
        '1 0 0 0 0 1 0 0 0 0 1 0 1',
      ],
      tags: [],
      graph: {
        serializedSurfaceMesh:
          '176\n10 10 -10 10000 10000 -10000\n-10 10 -10 -10000 10000 -10000\n10 -10 -10 10000 -10000 -10000\n-10 -10 -10 -10000 -10000 -10000\n-10 -10 10 -10000 -10000 10000\n-10 10 10 -10000 10000 10000\n10 -10 10 10000 -10000 10000\n10 10 10 10000 10000 10000\n0 -16711671/33554432 1/2 0 -498 500\n0 -16711671/33554432 -1/2 0 -498 -500\n3434873/33554432 -8161931/16777216 -1/2 102 -486 -500\n3434873/33554432 -8161931/16777216 1/2 102 -486 500\n7846805/8388608 -4918265/4194304 1/2 935 -1173 500\n5466587/8388608 -5666703/4194304 1/2 652 -1351 500\n5666703/4194304 -5466587/8388608 1/2 1351 -652 500\n4918265/4194304 -7846805/8388608 1/2 1173 -935 500\n13103379/33554432 -10162717/33554432 1/2 391 -303 500\n15051369/33554432 -14130343/67108864 1/2 449 -211 500\n8161931/16777216 -3434873/33554432 1/2 486 -102 500\n16711671/33554432 0 1/2 498 0 500\n12266157/8388608 701385/2097152 1/2 1462 334 500\n3/2 0 1/2 1500 0 500\n-3434873/33554432 8161931/16777216 1/2 -102 486 500\n-14130343/67108864 15051369/33554432 1/2 -211 449 500\n-15051369/33554432 14130343/67108864 1/2 -449 211 500\n-8161931/16777216 3434873/33554432 1/2 -486 102 500\n-16711671/33554432 0 1/2 -498 0 500\n-8161931/16777216 -3434873/33554432 1/2 -486 -102 500\n-701385/2097152 -12266157/8388608 1/2 -334 -1462 500\n-5466587/8388608 -5666703/4194304 1/2 -652 -1351 500\n14130343/67108864 -15051369/33554432 1/2 211 -449 500\n10162717/33554432 -13103379/33554432 1/2 303 -391 500\n701385/2097152 -12266157/8388608 1/2 334 -1462 500\n-5666703/4194304 5466587/8388608 1/2 -1351 652 500\n-4918265/4194304 7846805/8388608 1/2 -1173 935 500\n8161931/16777216 3434873/33554432 1/2 486 102 500\n15051369/33554432 14130343/67108864 1/2 449 211 500\n12266157/8388608 -701385/2097152 1/2 1462 -334 500\n7846805/8388608 4918265/4194304 1/2 935 1173 500\n4918265/4194304 7846805/8388608 1/2 1173 935 500\n13103379/33554432 10162717/33554432 1/2 391 303 500\n5666703/4194304 5466587/8388608 1/2 1351 652 500\n701385/2097152 12266157/8388608 1/2 334 1462 500\n5466587/8388608 5666703/4194304 1/2 652 1351 500\n0 3/2 1/2 0 1500 500\n0 16711671/33554432 1/2 0 498 500\n3434873/33554432 8161931/16777216 1/2 102 486 500\n14130343/67108864 15051369/33554432 1/2 211 449 500\n10162717/33554432 13103379/33554432 1/2 303 391 500\n-15051369/33554432 -14130343/67108864 1/2 -449 -211 500\n-13103379/33554432 10162717/33554432 1/2 -391 303 500\n-10162717/33554432 13103379/33554432 1/2 -303 391 500\n-5466587/8388608 5666703/4194304 1/2 -652 1351 500\n-701385/2097152 12266157/8388608 1/2 -334 1462 500\n-7846805/8388608 4918265/4194304 1/2 -935 1173 500\n-3/2 0 1/2 -1500 0 500\n-12266157/8388608 701385/2097152 1/2 -1462 334 500\n-12266157/8388608 -701385/2097152 1/2 -1462 -334 500\n-7846805/8388608 -4918265/4194304 1/2 -935 -1173 500\n-10162717/33554432 -13103379/33554432 1/2 -303 -391 500\n-14130343/67108864 -15051369/33554432 1/2 -211 -449 500\n-4918265/4194304 -7846805/8388608 1/2 -1173 -935 500\n-5666703/4194304 -5466587/8388608 1/2 -1351 -652 500\n-3434873/33554432 -8161931/16777216 1/2 -102 -486 500\n0 -3/2 1/2 0 -1500 500\n-13103379/33554432 -10162717/33554432 1/2 -391 -303 500\n7846805/8388608 -4918265/4194304 1 935 -1173 1000\n4918265/4194304 -7846805/8388608 1 1173 -935 1000\n5466587/8388608 -5666703/4194304 1 652 -1351 1000\n701385/2097152 -12266157/8388608 1 334 -1462 1000\n5666703/4194304 -5466587/8388608 1 1351 -652 1000\n12266157/8388608 -701385/2097152 1 1462 -334 1000\n0 -3/2 1 0 -1500 1000\n-701385/2097152 -12266157/8388608 1 -334 -1462 1000\n3/2 0 1 1500 0 1000\n12266157/8388608 701385/2097152 1 1462 334 1000\n5666703/4194304 5466587/8388608 1 1351 652 1000\n4918265/4194304 7846805/8388608 1 1173 935 1000\n5466587/8388608 5666703/4194304 1 652 1351 1000\n701385/2097152 12266157/8388608 1 334 1462 1000\n7846805/8388608 4918265/4194304 1 935 1173 1000\n0 3/2 1 0 1500 1000\n-701385/2097152 12266157/8388608 1 -334 1462 1000\n-5466587/8388608 5666703/4194304 1 -652 1351 1000\n-7846805/8388608 4918265/4194304 1 -935 1173 1000\n-4918265/4194304 7846805/8388608 1 -1173 935 1000\n-5666703/4194304 5466587/8388608 1 -1351 652 1000\n-3/2 0 1 -1500 0 1000\n-12266157/8388608 -701385/2097152 1 -1462 -334 1000\n-12266157/8388608 701385/2097152 1 -1462 334 1000\n-5466587/8388608 -5666703/4194304 1 -652 -1351 1000\n-5666703/4194304 -5466587/8388608 1 -1351 -652 1000\n-7846805/8388608 -4918265/4194304 1 -935 -1173 1000\n-4918265/4194304 -7846805/8388608 1 -1173 -935 1000\n16711671/33554432 0 -1/2 498 0 -500\n8161931/16777216 -3434873/33554432 -1/2 486 -102 -500\n15051369/33554432 -14130343/67108864 -1/2 449 -211 -500\n13103379/33554432 -10162717/33554432 -1/2 391 -303 -500\n10162717/33554432 -13103379/33554432 -1/2 303 -391 -500\n14130343/67108864 -15051369/33554432 -1/2 211 -449 -500\n5466587/8388608 -5666703/4194304 -1 652 -1351 -1000\n701385/2097152 -12266157/8388608 -1 334 -1462 -1000\n-12266157/8388608 701385/2097152 -1 -1462 334 -1000\n-5666703/4194304 5466587/8388608 -1 -1351 652 -1000\n5666703/4194304 5466587/8388608 -1 1351 652 -1000\n12266157/8388608 701385/2097152 -1 1462 334 -1000\n-701385/2097152 -12266157/8388608 -1 -334 -1462 -1000\n-5466587/8388608 -5666703/4194304 -1 -652 -1351 -1000\n7846805/8388608 -4918265/4194304 -1 935 -1173 -1000\n4918265/4194304 -7846805/8388608 -1 1173 -935 -1000\n5666703/4194304 -5466587/8388608 -1 1351 -652 -1000\n12266157/8388608 -701385/2097152 -1 1462 -334 -1000\n3/2 0 -1 1500 0 -1000\n4918265/4194304 7846805/8388608 -1 1173 935 -1000\n701385/2097152 12266157/8388608 -1 334 1462 -1000\n5466587/8388608 5666703/4194304 -1 652 1351 -1000\n7846805/8388608 4918265/4194304 -1 935 1173 -1000\n-701385/2097152 12266157/8388608 -1 -334 1462 -1000\n0 3/2 -1 0 1500 -1000\n-5466587/8388608 5666703/4194304 -1 -652 1351 -1000\n-7846805/8388608 4918265/4194304 -1 -935 1173 -1000\n-4918265/4194304 7846805/8388608 -1 -1173 935 -1000\n-3/2 0 -1 -1500 0 -1000\n-12266157/8388608 -701385/2097152 -1 -1462 -334 -1000\n-5666703/4194304 -5466587/8388608 -1 -1351 -652 -1000\n0 -3/2 -1 0 -1500 -1000\n-7846805/8388608 -4918265/4194304 -1 -935 -1173 -1000\n-4918265/4194304 -7846805/8388608 -1 -1173 -935 -1000\n10162717/33554432 13103379/33554432 -1/2 303 391 -500\n13103379/33554432 10162717/33554432 -1/2 391 303 -500\n3/2 0 -1/2 1500 0 -500\n12266157/8388608 701385/2097152 -1/2 1462 334 -500\n14130343/67108864 15051369/33554432 -1/2 211 449 -500\n-5466587/8388608 5666703/4194304 -1/2 -652 1351 -500\n-7846805/8388608 4918265/4194304 -1/2 -935 1173 -500\n-13103379/33554432 10162717/33554432 -1/2 -391 303 -500\n-10162717/33554432 13103379/33554432 -1/2 -303 391 -500\n-5666703/4194304 5466587/8388608 -1/2 -1351 652 -500\n-12266157/8388608 701385/2097152 -1/2 -1462 334 -500\n-7846805/8388608 -4918265/4194304 -1/2 -935 -1173 -500\n-5466587/8388608 -5666703/4194304 -1/2 -652 -1351 -500\n-701385/2097152 -12266157/8388608 -1/2 -334 -1462 -500\n7846805/8388608 -4918265/4194304 -1/2 935 -1173 -500\n4918265/4194304 -7846805/8388608 -1/2 1173 -935 -500\n0 -3/2 -1/2 0 -1500 -500\n701385/2097152 -12266157/8388608 -1/2 334 -1462 -500\n5466587/8388608 -5666703/4194304 -1/2 652 -1351 -500\n5666703/4194304 -5466587/8388608 -1/2 1351 -652 -500\n12266157/8388608 -701385/2097152 -1/2 1462 -334 -500\n5666703/4194304 5466587/8388608 -1/2 1351 652 -500\n15051369/33554432 14130343/67108864 -1/2 449 211 -500\n4918265/4194304 7846805/8388608 -1/2 1173 935 -500\n7846805/8388608 4918265/4194304 -1/2 935 1173 -500\n5466587/8388608 5666703/4194304 -1/2 652 1351 -500\n0 16711671/33554432 -1/2 0 498 -500\n3434873/33554432 8161931/16777216 -1/2 102 486 -500\n701385/2097152 12266157/8388608 -1/2 334 1462 -500\n8161931/16777216 3434873/33554432 -1/2 486 102 -500\n-15051369/33554432 14130343/67108864 -1/2 -449 211 -500\n-8161931/16777216 3434873/33554432 -1/2 -486 102 -500\n-14130343/67108864 15051369/33554432 -1/2 -211 449 -500\n-3434873/33554432 8161931/16777216 -1/2 -102 486 -500\n0 3/2 -1/2 0 1500 -500\n-701385/2097152 12266157/8388608 -1/2 -334 1462 -500\n-4918265/4194304 7846805/8388608 -1/2 -1173 935 -500\n-16711671/33554432 0 -1/2 -498 0 -500\n-8161931/16777216 -3434873/33554432 -1/2 -486 -102 -500\n-3/2 0 -1/2 -1500 0 -500\n-12266157/8388608 -701385/2097152 -1/2 -1462 -334 -500\n-15051369/33554432 -14130343/67108864 -1/2 -449 -211 -500\n-14130343/67108864 -15051369/33554432 -1/2 -211 -449 -500\n-10162717/33554432 -13103379/33554432 -1/2 -303 -391 -500\n-5666703/4194304 -5466587/8388608 -1/2 -1351 -652 -500\n-4918265/4194304 -7846805/8388608 -1/2 -1173 -935 -500\n-13103379/33554432 -10162717/33554432 -1/2 -391 -303 -500\n-3434873/33554432 -8161931/16777216 -1/2 -102 -486 -500\n\n344\n3 1 0 2\n3 1 2 3\n3 5 6 7\n3 5 4 6\n3 0 7 6\n3 2 0 6\n3 0 5 7\n3 0 1 5\n3 1 4 5\n3 1 3 4\n3 4 2 6\n3 3 2 4\n3 10 8 11\n3 9 8 10\n3 11 32 30\n3 32 13 30\n3 14 16 15\n3 43 48 38\n3 64 63 28\n3 14 17 16\n3 21 19 18\n3 52 51 23\n3 42 46 47\n3 54 50 51\n3 60 59 29\n3 55 25 56\n3 57 49 27\n3 64 11 8\n3 16 12 15\n3 13 12 31\n3 64 32 11\n3 28 60 29\n3 31 12 16\n3 30 13 31\n3 37 18 17\n3 14 37 17\n3 21 35 19\n3 37 21 18\n3 41 40 36\n3 38 48 40\n3 39 38 40\n3 47 48 43\n3 40 41 39\n3 44 46 42\n3 43 42 47\n3 41 36 20\n3 20 36 35\n3 20 35 21\n3 53 23 22\n3 24 50 33\n3 44 22 45\n3 44 45 46\n3 44 53 22\n3 53 52 23\n3 52 54 51\n3 54 34 50\n3 34 33 50\n3 33 56 24\n3 55 27 26\n3 55 57 27\n3 26 25 55\n3 25 24 56\n3 61 65 62\n3 29 59 58\n3 8 63 64\n3 63 60 28\n3 58 59 65\n3 61 58 65\n3 62 65 49\n3 57 62 49\n3 69 79 71\n3 68 69 70\n3 73 82 69\n3 79 76 75\n3 73 89 82\n3 88 89 73\n3 69 71 70\n3 73 69 72\n3 67 66 68\n3 70 67 68\n3 71 75 74\n3 71 79 75\n3 78 77 76\n3 78 76 79\n3 80 77 78\n3 79 69 82\n3 79 82 81\n3 82 89 83\n3 83 89 86\n3 84 83 86\n3 89 88 87\n3 85 84 86\n3 88 73 90\n3 91 88 90\n3 91 90 92\n3 91 92 93\n3 18 19 94\n3 18 94 95\n3 17 18 95\n3 95 96 17\n3 16 17 96\n3 96 97 16\n3 31 16 97\n3 97 98 31\n3 30 31 98\n3 98 99 30\n3 99 11 30\n3 10 11 99\n3 13 69 68\n3 13 32 69\n3 12 13 68\n3 12 68 66\n3 32 72 69\n3 32 64 72\n3 100 108 109\n3 117 102 106\n3 101 100 110\n3 114 111 105\n3 101 117 106\n3 119 103 102\n3 123 106 102\n3 101 106 125\n3 100 109 110\n3 101 110 111\n3 101 111 114\n3 111 112 105\n3 115 104 113\n3 116 115 113\n3 114 105 104\n3 115 114 104\n3 114 117 101\n3 118 117 114\n3 117 119 102\n3 119 120 103\n3 102 122 123\n3 123 124 107\n3 120 121 103\n3 107 106 123\n3 124 126 107\n3 124 127 126\n3 21 37 71\n3 21 71 74\n3 37 70 71\n3 37 14 70\n3 14 67 70\n3 14 15 67\n3 15 12 66\n3 15 66 67\n3 167 159 165\n3 97 147 143\n3 95 94 130\n3 97 96 147\n3 152 128 153\n3 131 150 149\n3 96 148 147\n3 144 10 145\n3 128 132 153\n3 161 160 163\n3 162 161 163\n3 133 136 134\n3 132 156 153\n3 140 171 170\n3 142 98 97\n3 99 146 145\n3 143 142 97\n3 144 175 9\n3 10 144 9\n3 141 175 144\n3 99 145 10\n3 98 146 99\n3 142 146 98\n3 94 157 130\n3 96 95 148\n3 130 157 131\n3 95 130 148\n3 129 151 149\n3 129 152 151\n3 132 155 156\n3 154 161 162\n3 155 154 162\n3 129 128 152\n3 150 129 149\n3 157 150 131\n3 173 172 174\n3 135 158 137\n3 136 135 134\n3 158 159 138\n3 155 162 156\n3 133 160 136\n3 163 160 133\n3 134 135 164\n3 164 135 137\n3 137 158 138\n3 138 159 167\n3 167 165 166\n3 168 167 166\n3 168 166 169\n3 171 139 174\n3 140 139 171\n3 141 170 175\n3 140 170 141\n3 173 174 139\n3 172 169 174\n3 168 169 172\n3 100 145 146\n3 100 101 145\n3 108 100 146\n3 108 146 142\n3 101 144 145\n3 101 125 144\n3 111 147 148\n3 111 110 147\n3 112 111 148\n3 112 148 130\n3 110 143 147\n3 110 109 143\n3 109 108 142\n3 109 142 143\n3 79 43 78\n3 42 43 79\n3 81 42 79\n3 44 42 81\n3 43 38 78\n3 78 38 80\n3 150 40 129\n3 36 40 150\n3 157 36 150\n3 35 36 157\n3 94 35 157\n3 19 35 94\n3 128 47 132\n3 48 47 128\n3 47 46 132\n3 132 46 155\n3 46 45 155\n3 155 45 154\n3 77 41 76\n3 39 41 77\n3 38 39 80\n3 80 39 77\n3 41 20 76\n3 76 20 75\n3 75 21 74\n3 20 21 75\n3 40 48 129\n3 129 48 128\n3 115 116 153\n3 153 116 152\n3 156 115 153\n3 114 115 156\n3 162 114 156\n3 118 114 162\n3 151 104 149\n3 113 104 151\n3 116 113 152\n3 152 113 151\n3 104 105 149\n3 149 105 131\n3 131 112 130\n3 105 112 131\n3 57 87 88\n3 57 55 87\n3 29 92 90\n3 29 58 92\n3 28 29 90\n3 28 90 73\n3 62 57 88\n3 62 88 91\n3 61 62 91\n3 61 91 93\n3 58 93 92\n3 58 61 93\n3 27 49 169\n3 27 169 166\n3 65 59 171\n3 65 171 174\n3 8 9 63\n3 175 63 9\n3 60 63 175\n3 60 175 170\n3 59 170 171\n3 59 60 170\n3 26 27 166\n3 26 166 165\n3 49 174 169\n3 49 65 174\n3 64 73 72\n3 64 28 73\n3 107 139 140\n3 107 126 139\n3 106 107 140\n3 106 140 141\n3 123 167 168\n3 123 122 167\n3 124 123 168\n3 124 168 172\n3 127 124 172\n3 127 172 173\n3 126 173 139\n3 126 127 173\n3 125 141 144\n3 125 106 141\n3 24 25 158\n3 25 159 158\n3 25 26 159\n3 26 165 159\n3 52 83 84\n3 54 52 84\n3 34 54 85\n3 54 84 85\n3 33 34 86\n3 34 85 86\n3 50 24 135\n3 24 158 135\n3 56 33 89\n3 33 86 89\n3 56 89 87\n3 55 56 87\n3 53 44 82\n3 44 81 82\n3 53 82 83\n3 52 53 83\n3 22 161 154\n3 45 22 154\n3 23 160 161\n3 22 23 161\n3 51 136 160\n3 23 51 160\n3 51 50 136\n3 50 135 136\n3 120 119 134\n3 119 133 134\n3 121 120 164\n3 120 134 164\n3 103 121 137\n3 121 164 137\n3 102 103 138\n3 103 137 138\n3 102 138 167\n3 122 102 167\n3 117 118 163\n3 118 162 163\n3 117 163 133\n3 119 117 133\n',
        hash: 'OiMNTiL94Cb80sYOcTKtKm/bxEuTqNM1AistVxWOwOE=',
      },
    },
  ]);
});
