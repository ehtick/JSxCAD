import { initCgal } from './getCgal.js';
import { join } from './join.js';

import test from 'ava';

test.beforeEach(async (t) => {
  await initCgal();
});

test('Join Boxes', (t) => {
  const result = join(
    [
      {
        type: 'graph',
        matrix: [
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          '1 0 0 0 0 1 0 0 0 0 1 0 1',
        ],
        tags: [],
        graph: {
          serializedSurfaceMesh:
            '8\n1/2 -1 -3/2 500 -1000 -1500\n1/2 1 -3/2 500 1000 -1500\n-1/2 1 -3/2 -500 1000 -1500\n-1/2 -1 -3/2 -500 -1000 -1500\n1/2 -1 3/2 500 -1000 1500\n1/2 1 3/2 500 1000 1500\n-1/2 1 3/2 -500 1000 1500\n-1/2 -1 3/2 -500 -1000 1500\n\n12\n3 2 1 0\n3 2 0 3\n3 6 4 5\n3 6 7 4\n3 5 4 1\n3 0 1 4\n3 6 5 2\n3 1 2 5\n3 7 6 3\n3 2 3 6\n3 4 7 0\n3 3 0 7\n',
          hash: '/V5KuVgejGFJmafZC5NRewa0urP5L+ni/15qm3xL458=',
        },
      },
      {
        type: 'graph',
        matrix: [
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          '1 0 0 0 0 1 0 0 0 0 1 0 1',
        ],
        tags: [],
        graph: {
          serializedSurfaceMesh:
            '8\n3/2 -1 -1/2 1500 -1000 -500\n3/2 1 -1/2 1500 1000 -500\n-3/2 1 -1/2 -1500 1000 -500\n-3/2 -1 -1/2 -1500 -1000 -500\n3/2 -1 1/2 1500 -1000 500\n3/2 1 1/2 1500 1000 500\n-3/2 1 1/2 -1500 1000 500\n-3/2 -1 1/2 -1500 -1000 500\n\n12\n3 2 1 0\n3 2 0 3\n3 6 4 5\n3 6 7 4\n3 5 4 1\n3 0 1 4\n3 6 5 2\n3 1 2 5\n3 7 6 3\n3 2 3 6\n3 4 7 0\n3 3 0 7\n',
          hash: 'I16QZUoaO7D8XzZL9L6hzmezXh/d41ZXP0o+WyN0Lj0=',
        },
      },
    ],
    1
  );
  t.deepEqual(JSON.parse(JSON.stringify(result)), [
    {
      type: 'graph',
      matrix: [
        1,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        1,
        '1 0 0 0 0 1 0 0 0 0 1 0 1',
      ],
      tags: [],
      graph: {
        serializedSurfaceMesh:
          '24\n1/2 1 -1/2 500 1000 -500\n1/2 1 -3/2 500 1000 -1500\n1/2 -1 -1/2 500 -1000 -500\n1/2 -1 -3/2 500 -1000 -1500\n-1/2 -1 -3/2 -500 -1000 -1500\n-1/2 1 -3/2 -500 1000 -1500\n-1/2 -1 -1/2 -500 -1000 -500\n-1/2 1 -1/2 -500 1000 -500\n3/2 1 -1/2 1500 1000 -500\n3/2 1 1/2 1500 1000 500\n1/2 1 1/2 500 1000 500\n-1/2 1 1/2 -500 1000 500\n-3/2 1 1/2 -1500 1000 500\n1/2 1 3/2 500 1000 1500\n-1/2 1 3/2 -500 1000 1500\n-3/2 1 -1/2 -1500 1000 -500\n-1/2 -1 3/2 -500 -1000 1500\n-1/2 -1 1/2 -500 -1000 500\n3/2 -1 -1/2 1500 -1000 -500\n3/2 -1 1/2 1500 -1000 500\n1/2 -1 1/2 500 -1000 500\n-3/2 -1 1/2 -1500 -1000 500\n-3/2 -1 -1/2 -1500 -1000 -500\n1/2 -1 3/2 500 -1000 1500\n\n44\n3 1 2 3\n3 2 1 0\n3 5 4 6\n3 5 6 7\n3 12 7 15\n3 9 8 10\n3 8 0 10\n3 1 7 0\n3 11 10 0\n3 11 0 7\n3 1 5 7\n3 12 11 7\n3 14 13 10\n3 14 10 11\n3 14 11 16\n3 17 16 11\n3 6 21 22\n3 2 18 20\n3 20 16 17\n3 20 17 2\n3 18 19 20\n3 2 17 6\n3 6 3 2\n3 4 3 6\n3 20 23 16\n3 17 21 6\n3 1 3 5\n3 5 3 4\n3 10 13 23\n3 10 23 20\n3 14 16 23\n3 13 14 23\n3 9 10 19\n3 10 20 19\n3 8 9 19\n3 8 19 18\n3 2 0 18\n3 8 18 0\n3 7 6 15\n3 22 15 6\n3 12 21 17\n3 11 12 17\n3 21 15 22\n3 12 15 21\n',
        hash: 'OBUMd6UQDDsgZFB/NwbKHdXukgcScVQ7fQe7DzQw1ec=',
      },
    },
  ]);
});
