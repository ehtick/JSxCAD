import { initCgal } from './getCgal.js';
import { join } from './join.js';

import test from 'ava';

test.beforeEach(async (t) => {
  await initCgal();
});

test('Join Boxes', (t) => {
  const result = join(
    [
      {
        type: 'graph',
        matrix: [
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          '1 0 0 0 0 1 0 0 0 0 1 0 1',
        ],
        tags: [],
        graph: {
          serializedSurfaceMesh:
            '8\n1/2 -1 -3/2 500 -1000 -1500\n1/2 1 -3/2 500 1000 -1500\n-1/2 1 -3/2 -500 1000 -1500\n-1/2 -1 -3/2 -500 -1000 -1500\n1/2 -1 3/2 500 -1000 1500\n1/2 1 3/2 500 1000 1500\n-1/2 1 3/2 -500 1000 1500\n-1/2 -1 3/2 -500 -1000 1500\n\n12\n3 2 1 0\n3 2 0 3\n3 6 4 5\n3 6 7 4\n3 5 4 1\n3 0 1 4\n3 6 5 2\n3 1 2 5\n3 7 6 3\n3 2 3 6\n3 4 7 0\n3 3 0 7\n',
          hash: '/V5KuVgejGFJmafZC5NRewa0urP5L+ni/15qm3xL458=',
        },
      },
      {
        type: 'graph',
        matrix: [
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          '1 0 0 0 0 1 0 0 0 0 1 0 1',
        ],
        tags: [],
        graph: {
          serializedSurfaceMesh:
            '8\n3/2 -1 -1/2 1500 -1000 -500\n3/2 1 -1/2 1500 1000 -500\n-3/2 1 -1/2 -1500 1000 -500\n-3/2 -1 -1/2 -1500 -1000 -500\n3/2 -1 1/2 1500 -1000 500\n3/2 1 1/2 1500 1000 500\n-3/2 1 1/2 -1500 1000 500\n-3/2 -1 1/2 -1500 -1000 500\n\n12\n3 2 1 0\n3 2 0 3\n3 6 4 5\n3 6 7 4\n3 5 4 1\n3 0 1 4\n3 6 5 2\n3 1 2 5\n3 7 6 3\n3 2 3 6\n3 4 7 0\n3 3 0 7\n',
          hash: 'I16QZUoaO7D8XzZL9L6hzmezXh/d41ZXP0o+WyN0Lj0=',
        },
      },
    ],
    1
  );
  t.deepEqual(JSON.parse(JSON.stringify(result)), [
    {
      type: 'graph',
      matrix: [
        1,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        1,
        '1 0 0 0 0 1 0 0 0 0 1 0 1',
      ],
      tags: [],
      graph: {
        serializedSurfaceMesh:
          '24\n1/2 -1 -3/2 500 -1000 -1500\n1/2 1 -3/2 500 1000 -1500\n-1/2 1 -3/2 -500 1000 -1500\n-1/2 -1 -3/2 -500 -1000 -1500\n-1/2 -1 3/2 -500 -1000 1500\n-1/2 1 3/2 -500 1000 1500\n1/2 -1 3/2 500 -1000 1500\n1/2 1 3/2 500 1000 1500\n1/2 1 1/2 500 1000 500\n1/2 -1 1/2 500 -1000 500\n1/2 -1 -1/2 500 -1000 -500\n1/2 1 -1/2 500 1000 -500\n3/2 1 1/2 1500 1000 500\n3/2 1 -1/2 1500 1000 -500\n-1/2 1 1/2 -500 1000 500\n-1/2 1 -1/2 -500 1000 -500\n-3/2 1 -1/2 -1500 1000 -500\n-3/2 1 1/2 -1500 1000 500\n-1/2 -1 1/2 -500 -1000 500\n-1/2 -1 -1/2 -500 -1000 -500\n3/2 -1 1/2 1500 -1000 500\n3/2 -1 -1/2 1500 -1000 -500\n-3/2 -1 1/2 -1500 -1000 500\n-3/2 -1 -1/2 -1500 -1000 -500\n\n44\n3 1 0 2\n3 3 2 0\n3 5 6 7\n3 6 5 4\n3 7 6 8\n3 9 8 6\n3 0 1 10\n3 11 10 1\n3 8 12 13\n3 8 13 11\n3 14 5 8\n3 1 2 15\n3 15 17 14\n3 11 1 15\n3 11 14 8\n3 16 17 15\n3 15 14 11\n3 5 7 8\n3 4 5 14\n3 14 18 4\n3 2 3 19\n3 19 15 2\n3 22 23 19\n3 21 9 10\n3 20 9 21\n3 0 10 19\n3 18 10 9\n3 0 19 3\n3 18 19 10\n3 22 19 18\n3 4 9 6\n3 4 18 9\n3 10 11 21\n3 13 21 11\n3 8 20 12\n3 20 8 9\n3 13 20 21\n3 13 12 20\n3 16 15 19\n3 16 19 23\n3 22 16 23\n3 17 16 22\n3 17 22 18\n3 14 17 18\n',
        hash: '5G/dupsYrMbD519V2NtzS2g2V1+NCPTF7jvSXEYeFn4=',
      },
    },
  ]);
});
