import { boot, read } from '@jsxcad/sys';

import { prepareForSerialization } from '@jsxcad/geometry';
import test from 'ava';
import { toFont } from './toFont.js';

test('Render a letter', async (t) => {
  await boot();
  const bytes = await read('GreatVibes-Regular.ttf', {
    doSerialize: false,
    sources: ['GreatVibes-Regular.ttf'],
  });
  const font = toFont({}, bytes);
  const letterA = font({}, 'ab');
  t.deepEqual(JSON.parse(JSON.stringify(prepareForSerialization(letterA))), {
    type: 'group',
    tags: [],
    content: [
      {
        type: 'graph',
        tags: [],
        graph: {
          isClosed: false,
          isEmpty: false,
          isLazy: true,
          provenance: 'algorithm/cgal/fromSurfaceMeshToLazyGraph',
          isOutline: false,
          serializedSurfaceMesh:
            '83\n7/23 7/48 0\n3/10 5/34 0\n8/27 1/7 0\n7/23 4/29 0\n12/41 4/29 0\n10/33 2/15 0\n8/29 2/19 0\n11/39 3/32 0\n5/21 1/21 0\n7/32 1/38 0\n6/29 1/51 0\n7/32 1/96 0\n10/49 0 0\n1/5 1/53 0\n6/31 -1/295 0\n8/41 1/51 0\n5/26 1/41 0\n5/27 0 0\n3/38 1/44 0\n1/16 1/47 0\n2/31 0 0\n5/26 2/33 0\n3/19 1/11 0\n5/33 2/31 0\n10/51 3/38 0\n3/14 2/17 0\n1/6 1/8 0\n9/37 4/23 0\n5/26 5/29 0\n2/9 10/51 0\n5/24 5/26 0\n16/63 6/31 0\n8/35 11/56 0\n6/23 6/31 0\n7/29 7/33 0\n7/30 2/9 0\n9/38 7/33 0\n7/39 5/33 0\n4/27 2/27 0\n5/37 2/27 0\n4/33 1/25 0\n3/26 2/39 0\n3/29 1/26 0\n3/28 1/40 0\n1/11 1/76 0\n1/24 1/181 0\n1/37 1/44 0\n1/18 1/40 0\n1/52 1/20 0\n1/20 1/30 0\n1/20 1/18 0\n1/47 2/23 0\n1/18 1/13 0\n1/30 4/31 0\n2/25 4/31 0\n1/17 3/17 0\n2/23 4/19 0\n4/39 4/25 0\n4/29 12/59 0\n1/13 1/5 0\n4/31 6/25 0\n2/19 5/22 0\n6/37 9/40 0\n3/20 1/4 0\n3/17 3/13 0\n4/23 9/35 0\n5/27 4/17 0\n8/41 8/31 0\n7/34 5/21 0\n5/23 17/67 0\n9/37 7/30 0\n9/38 7/29 0\n14/57 8/37 0\n1/4 2/9 0\n16/65 3/13 0\n9/41 4/17 0\n2/27 3/26 0\n1/20 2/43 0\n1/6 1/108 0\n4/21 1/24 0\n5/32 1/43 0\n5/33 1/27 0\n7/29 1/32 0\n\n81\n3 2 0 1\n3 4 3 2\n3 2 3 0\n3 5 3 4\n3 5 4 6\n3 5 6 7\n3 6 8 7\n3 11 9 10\n3 11 10 12\n3 12 13 14\n3 17 15 16\n3 20 18 19\n3 23 21 22\n3 26 24 25\n3 28 25 27\n3 30 27 29\n3 27 31 32\n3 33 31 27\n3 27 32 29\n3 36 34 35\n3 28 27 30\n3 37 25 28\n3 26 25 37\n3 39 38 22\n3 40 38 39\n3 40 39 41\n3 43 40 42\n3 44 18 20\n3 20 19 45\n3 47 46 45\n3 49 48 46\n3 48 50 51\n3 50 52 51\n3 55 53 54\n3 58 56 57\n3 56 59 57\n3 61 58 60\n3 60 62 63\n3 63 64 65\n3 65 66 67\n3 66 68 67\n3 68 69 67\n3 71 35 70\n3 34 72 35\n3 35 72 73\n3 35 73 74\n3 35 74 70\n3 75 35 71\n3 75 71 69\n3 75 69 68\n3 64 66 65\n3 62 64 63\n3 58 62 60\n3 56 58 61\n3 59 55 57\n3 55 54 57\n3 53 76 54\n3 52 76 53\n3 52 53 51\n3 77 50 48\n3 77 48 49\n3 49 46 47\n3 47 45 19\n3 17 16 78\n3 14 15 17\n3 80 16 79\n3 44 43 18\n3 43 42 18\n3 81 79 23\n3 40 41 42\n3 21 24 22\n3 39 22 26\n3 22 24 26\n3 23 79 21\n3 81 80 79\n3 78 16 80\n3 13 15 14\n3 10 13 12\n3 82 9 11\n3 8 9 82\n3 8 82 7\n',
          hash: 'tVz0tzCd5MQ/GRtqMAqQqacNFgUZXnhw4fMV32mbOaU=',
        },
        cache: {
          boundingBox: [
            [0.019230769230769214, -0.0033898305084745783, -2e-323],
            [0.30434782608695676, 0.25806451612903253, 1.5e-323],
          ],
        },
      },
      {
        type: 'graph',
        tags: [],
        graph: {
          isClosed: false,
          isEmpty: false,
          isLazy: true,
          provenance: 'algorithm/cgal/fromSurfaceMeshToLazyGraph',
          isOutline: false,
          serializedSurfaceMesh:
            '73\n13/31 7/29 0\n20/47 9/38 0\n8/19 18/73 0\n7/23 4/25 0\n10/39 2/29 0\n12/41 1/9 0\n12/47 1/22 0\n4/17 1/27 0\n6/25 1/34 0\n7/30 1/30 0\n9/38 1/36 0\n13/41 5/32 0\n7/20 4/23 0\n10/27 1/281 0\n6/17 1/54 0\n11/32 -1/326 0\n10/31 1/296 0\n20/59 1/46 0\n12/37 1/31 0\n2/7 1/30 0\n5/17 1/48 0\n8/25 1/20 0\n11/36 1/98 0\n9/32 1/20 0\n11/39 1/15 0\n13/33 1/96 0\n5/12 1/48 0\n7/18 1/26 0\n11/27 1/17 0\n5/13 1/144 0\n4/9 1/24 0\n11/26 3/38 0\n19/40 3/37 0\n39/79 5/39 0\n9/20 1/8 0\n67/133 3/20 0\n6/13 4/27 0\n15/34 5/21 0\n13/30 16/63 0\n10/23 9/38 0\n4/9 20/79 0\n5/12 10/27 0\n31/63 11/27 0\n11/25 9/22 0\n14/31 14/33 0\n3/7 5/16 0\n8/17 8/33 0\n13/28 5/22 0\n14/29 7/30 0\n4/11 12/59 0\n12/23 15/34 0\n16/31 15/34 0\n71/141 1/5 0\n9/19 10/51 0\n42/83 1/6 0\n13/36 7/26 0\n7/15 9/55 0\n8/17 5/23 0\n5/11 1/4 0\n5/11 4/17 0\n26/53 2/9 0\n11/36 5/37 0\n9/31 2/21 0\n19/58 4/35 0\n2/7 1/13 0\n9/28 2/27 0\n11/30 1/45 0\n9/26 1/53 0\n5/13 5/21 0\n26/53 4/9 0\n20/41 4/9 0\n14/29 4/9 0\n8/17 11/25 0\n\n71\n3 2 0 1\n3 5 3 4\n3 8 6 7\n3 6 4 7\n3 8 9 10\n3 7 9 8\n3 5 4 6\n3 11 3 5\n3 12 3 11\n3 15 13 14\n3 18 16 17\n3 21 19 20\n3 17 16 15\n3 20 22 18\n3 24 23 21\n3 27 25 26\n3 27 26 28\n3 29 25 27\n3 30 28 26\n3 32 31 30\n3 34 32 33\n3 36 33 35\n3 39 37 38\n3 39 38 1\n3 40 38 37\n3 38 2 1\n3 43 41 42\n3 43 42 44\n3 42 41 45\n3 48 46 47\n3 3 12 49\n3 42 50 51\n3 54 52 53\n3 55 45 41\n3 54 53 56\n3 48 47 57\n3 59 46 58\n3 40 37 58\n3 37 59 58\n3 47 46 59\n3 57 53 60\n3 48 57 60\n3 53 52 60\n3 56 35 54\n3 56 36 35\n3 63 61 62\n3 36 34 33\n3 34 31 32\n3 65 62 64\n3 31 28 30\n3 24 21 65\n3 66 13 29\n3 27 66 29\n3 14 13 66\n3 64 24 65\n3 67 17 15\n3 14 67 15\n3 22 16 18\n3 20 18 21\n3 21 23 19\n3 63 62 65\n3 63 11 61\n3 11 63 12\n3 55 3 49\n3 55 49 68\n3 55 68 45\n3 42 51 69\n3 42 69 70\n3 42 70 71\n3 42 71 72\n3 42 72 44\n',
          hash: 'fkiMl2m60e366kCr9zwIUIEbLql8dFPeL30YzI6R3So=',
        },
        cache: {
          boundingBox: [
            [0.2333333333333332, -0.003067484662576689, -2e-323],
            [0.5217391304347831, 0.4444444444444447, 1.5e-323],
          ],
        },
      },
    ],
  });
});
